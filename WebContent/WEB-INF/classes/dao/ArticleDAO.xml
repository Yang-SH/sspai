<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <!-- 一对多 -->
<mapper namespace="dao.ArticleDAO">
	<resultMap id="resultArticle" type="entity.Article">
		<id property="id" column="article_id"/>
		<result property="name" column="article_name"/>
		<result property="content" column="article_content"/>
		<result property="pic_path" column="article_pic_path"/>
		<result property="user_id" column="article_user_id"/>
		<result property="comment_num" column="article_comment_num"/>
		<result property="create_time" column="article_create_time"/>
		<result property="topic_id" column="article_topic_id"/>
		<result property="article_name" column="article_name"/>
		<result property="stats" column="article_stats"/>
		<result property="is_chosen" column="article_is_chosen"/>
		<association property="user" javaType="entity.User">
			<id property="id" column="user_id"/>
			<result property="nickname" column="user_nickname"/>
			<result property="head_path" column="user_head_path"/>
			<result property="stats" column="user_stats"/>
			<association property="like" javaType="entity.Like">
				<id property="id" column="id"/>
				<result property="like_num" column="like_num"/>
			</association>
		</association>
	</resultMap>
	
	<select id="queryArticle" resultMap="resultArticle">
		select
			article.id as article_id,
			article.article_name as article_name,
			article.content as article_content,
			article.pic_path as article_pic_path,
			article.is_chosen as article_is_chosen,
			user_id as article_user_id,
			comment_num as article_comment_num,
			article.`create_time` as article_create_time,
			topic_id as article_topic_id,
			article_name as article_name,
			article.stats as article_stats,
			user.stats as user_stats,
			user.head_path as user_head_path,
			user.id as user_id,
			nickname as user_nickname
		from 
			article,user
		where 
			article.user_id=user.id and article.article_name like concat(concat('%',#{article_name}),'%')
	</select>
	
	<select id="queryAll" resultMap="resultArticle">
		select
			article.id as article_id,
			article.article_name as article_name,
			content as article_content,
			article.pic_path as article_pic_path,
			article.is_chosen as article_is_chosen,
			user_id as article_user_id,
			comment_num as article_comment_num,
			article.`create_time` AS article_create_time,
			topic_id as article_topic_id,
			article_name as article_name,
			article.stats as article_stats,
			user.stats as user_stats,
			user.id as user_id,
			nickname as user_nickname,
			user.head_path as user_head_path
		from 
			article,user
		where 
			article.user_id=user.id
			and article.stats != 0
		order by
			article.create_time desc
	</select>
	
	<resultMap type="Integer" id="resultLike">
		<id property="id" column="article_id"/>
		<association property="user" javaType="entity.User">
			<id property="id" column="user_id"/>
			<association property="like" javaType="entity.Like">
				<id property="id" column="id"/>
				<result property="like_num" column="like_num"/>
			</association>
		</association>
	</resultMap>
	<select id="queryArticleLikeNum" resultType="int" >
		SELECT
			COUNT(*)
		FROM
			`like`
		WHERE
			`like`.`like_type`='article'
			AND 
			`like`.`like_id`=#{articleId}
	</select>
	
	<select id="judgeLike" resultType="entity.Like">
		select * from `like` where like_id=#{like_id} and user_id=#{user_id}
	</select>
	
	<select id="queryArticleCommentNum" resultType="int" >
		SELECT
			COUNT(*)
		FROM
			`comment`
		WHERE
			`comment`.`article_id`=#{articleId}
	</select>
	
	<insert id="addCollection" parameterType="entity.Collection">
		insert into collection(user_id,article_id) values(#{user_id},#{article_id})
	</insert>
	
	<update id="setArticle" parameterType="entity.Article">
		update article set stats=#{stats} where id=#{id}
	</update>
	
	<select id="findArticleByPBForUser" resultMap="resultArticle">
		select
			article.id as article_id,
			article.article_name as article_name,
			content as article_content,
			article.pic_path as article_pic_path,
			article.is_chosen as article_is_chosen,
			user_id as article_user_id,
			comment_num as article_comment_num,
			article.`create_time` AS article_create_time,
			topic_id as article_topic_id,
			article_name as article_name,
			article.stats as article_stats,
			user.stats as user_stats,
			user.id as user_id,
			nickname as user_nickname,
			user.head_path as user_head_path
		from 
			article,user
		where 
			article.user_id=user.id
			and article.stats != 0
			limit #{start},#{pageSize}
	</select>
	
	<select id="findArticleByPBForAdm" resultMap="resultArticle">
		select
			article.id as article_id,
			article.article_name as article_name,
			content as article_content,
			article.pic_path as article_pic_path,
			article.is_chosen as article_is_chosen,
			user_id as article_user_id,
			comment_num as article_comment_num,
			article.`create_time` AS article_create_time,
			topic_id as article_topic_id,
			article_name as article_name,
			article.stats as article_stats,
			user.stats as user_stats,
			user.id as user_id,
			nickname as user_nickname,
			user.head_path as user_head_path
		from 
			article,user
		where 
			article.user_id=user.id
			limit #{start},#{pageSize}
	</select>
	
	<select id="findArticleById" resultMap="resultArticle">
		select
			article.id as article_id,
			article.article_name as article_name,
			content as article_content,
			article.pic_path as article_pic_path,
			article.is_chosen as article_is_chosen,
			user_id as article_user_id,
			comment_num as article_comment_num,
			article.`create_time` AS article_create_time,
			topic_id as article_topic_id,
			article_name as article_name,
			article.stats as article_stats,
			user.stats as user_stats,
			user.id as user_id,
			nickname as user_nickname,
			user.head_path as user_head_path
		from 
			article,user
		where 
			article.user_id = user.id 
			and article.id = #{id}
	</select>
	<!-- 用户写的文章 -->
	<select id="findArticleByUserId" resultMap="resultArticle">
		SELECT
			article.id AS article_id,
			article.article_name AS article_name,
			content AS article_content,
			article.pic_path AS article_pic_path,
			article.is_chosen as article_is_chosen,
			user_id AS article_user_id,
			comment_num AS article_comment_num,
			article.`create_time` AS article_create_time,
			topic_id AS article_topic_id,
			article_name AS article_name,
			article.stats AS article_stats,
			user.stats AS user_stats,
			user.id AS user_id,
			nickname AS user_nickname,
			user.head_path as user_head_path
		FROM 
			article,`user`
		WHERE 
			article.`user_id`=user.`id`
			AND
			 user.id  = #{id}
	</select>
	
	<select id="findChosenArticle" resultMap="resultArticle" >
		SELECT
			article.id AS article_id,
			article.article_name AS article_name,
			content AS article_content,
			article.pic_path AS article_pic_path,
			article.is_chosen as article_is_chosen,
			user_id AS article_user_id,
			comment_num AS article_comment_num,
			article.`create_time` AS article_create_time,
			topic_id AS article_topic_id,
			article_name AS article_name,
			article.stats AS article_stats,
			user.stats AS user_stats,
			user.id AS user_id,
			nickname AS user_nickname,
			user.head_path as user_head_path
		FROM 
			article,`user`
		WHERE 
			article.`user_id`=user.`id`
			AND
			article.is_chosen = true
			order by article.`create_time`
			limit 0,5
	</select>
	
	<select id="findChosenNum" resultType="int" >
		SELECT
			count(*)
		FROM 
			article
		WHERE 
			article.is_chosen = true
	</select>
	
	<insert id="insertArticle" parameterType="entity.Article" >
		insert
		into
			article 
			(content,pic_path,user_id,comment_num,create_time,topic_id,article_name,stats,is_chosen)
			values(#{content},#{pic_path},#{user_id},#{comment_num},#{create_time},#{topic_id},#{article_name},#{stats},#{is_chosen})
	</insert>
	
	<select id="findCollArticles" resultMap="resultArticle">
		select
			article.id as article_id,
			article.article_name as article_name,
			content as article_content,
			article.pic_path as article_pic_path,
			article.is_chosen as article_is_chosen,
			user_id as article_user_id,
			comment_num as article_comment_num,
			article.`create_time` AS article_create_time,
			topic_id as article_topic_id,
			article_name as article_name,
			article.stats as article_stats,
			user.stats as user_stats,
			user.id as user_id,
			nickname as user_nickname,
			user.head_path as user_head_path
		from 
			article,user
		where 
			article.user_id = user.id 
			and article.id 
			in(
				select article_id
				from collection
				where user_id=#{id}
			)
			
	</select>
	
	<select id="findByTopic" resultMap="resultArticle">
		select
			article.id as article_id,
			article.article_name as article_name,
			content as article_content,
			article.pic_path as article_pic_path,
			article.is_chosen as article_is_chosen,
			user_id as article_user_id,
			comment_num as article_comment_num,
			article.`create_time` AS article_create_time,
			topic_id as article_topic_id,
			article_name as article_name,
			article.stats as article_stats,
			user.stats as user_stats,
			user.id as user_id,
			nickname as user_nickname,
			user.head_path as user_head_path
		from 
			article,user
		where 
			article.user_id = user.id 
			and article.topic_id = #{topic_id}
	</select>
</mapper>